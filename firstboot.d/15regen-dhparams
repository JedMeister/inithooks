#!/bin/bash -e
# Regenerate DH params file

[ -n "$_TURNKEY_INIT" ] && exit 0

# support pre-seeding of DH_BITS
[[ -e $INITHOOKS_CONF ]] && . $INITHOOKS_CONF
[[ -n "$DH_BITS" ]] && DH_TIMEOUT=0 # zero timeout if DH_BITS set
DH_TIMEOUT=${DH_TIMEOUT:-10} # wait at least 10 seconds if not set

fatal() {
    echo "fatal: $@" 1>&2
    exit 1
}

which openssl >/dev/null || fatal "openssl is not installed"

dh_bit_msg() {
    cat << EOF
The Diffie-Hellman (DH) group paramters are used during initial key exchange when opening
a SSL/TLS connection (e.g. HTTPS). A minimum Diffie-Hellman (DH) group of 1024 bits (as
generated by default) should protect against most FREAK and/or Logjam attacks.

However, to ensure protection from attack by highly resourced attackers (e.g. a nation-state)
a minimum of 2048 bits is recommended. Generating a DH group of 2048 (or higher) is
particularly CPU intensive and can take a long time; especially on a low spec Cloud server,
VPS or low spec hardware. Hence why we default to using 1024 bits.

A new Diffie-Hellman group of 2048 bits (or 4096 if you're extra paranoid; but will likely
take hours) can be generated like this:

    export DH_BITS=2048 # or alternatively DH_BITS=4096
    $0

EOF
}

DH_BITS=${DH_BITS:-1024}
dh_bit_msg
start=$SECONDS
openssl dhparam -out /etc/ssl/private/dhparams.pem $DH_BITS
chmod 400 /etc/ssl/private/dhparams.pem

# if dhparams generation takes less that DH_TIMEOUT, wait (so user can read the blurb).
finish=$SECONDS
time_to_run=$(( $finish - $start ))
time_to_wait=$(( $DH_TIMEOUT - $time_to_run ))
[[ $time_to_wait -gt 0 ]] && sleep $time_to_wait

if [[ "$RUN_FIRSTBOOT" = "false" ]]; then
    # explictly restart relevant services if RUN_FIRSTBOOT=false
    $INITHOOKS_PATH/firstboot.d/17restart-webservers
fi

exit 0
